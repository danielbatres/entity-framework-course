// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ef_project;

#nullable disable

namespace ef_project.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20230621215008_InitialData")]
    partial class InitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ef_project.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("824d3c0a-900f-4069-a80f-ade59940e020"),
                            Name = "Pending activities",
                            Weight = 20
                        },
                        new
                        {
                            CategoryId = new Guid("824d3c0a-900f-4069-a80f-ade59940e022"),
                            Name = "Personal activities",
                            Weight = 50
                        });
                });

            modelBuilder.Entity("ef_project.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("4da3fc64-ee46-4654-9387-f2ea2fe4116b"),
                            CategoryId = new Guid("824d3c0a-900f-4069-a80f-ade59940e020"),
                            CreationDateTime = new DateTime(2023, 6, 21, 15, 50, 8, 605, DateTimeKind.Local).AddTicks(8302),
                            TaskPriority = 1,
                            Title = "Payment of public services"
                        },
                        new
                        {
                            TaskId = new Guid("0bf7dc7e-930c-45b4-b957-d9b6e9f5a175"),
                            CategoryId = new Guid("824d3c0a-900f-4069-a80f-ade59940e022"),
                            CreationDateTime = new DateTime(2023, 6, 21, 15, 50, 8, 605, DateTimeKind.Local).AddTicks(8355),
                            TaskPriority = 0,
                            Title = "Finish watching movie on netflix"
                        });
                });

            modelBuilder.Entity("ef_project.Models.Task", b =>
                {
                    b.HasOne("ef_project.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ef_project.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
